, "tabs", "<all_urls>"


/*global chrome*/
import React, { cloneElement, useEffect, useState } from "react";
import { v4 as uuidv4 } from "uuid";
import "./App.css";

function App() {
  const [siteRedirectUrl, setSiteRedirectUrl] = useState("");
  const [siteUrl, setSiteUrl] = useState("");
  const [siteLogo, setSiteLogo] = useState("");
  const [siteTitle, setSiteTitle] = useState("");
  const [siteHTML, setSiteHTML] = useState("");

  const [data, updateData] = useState({
    text: "",
    description: "",
  });

  const [heading, setHeading] = useState("");
  const [enonic, setEnonic] = useState("");
  const [ho, setHo] = useState("");
  const [text, setText] = useState('"_id":"(.*?)"');
  const [description, setDescription] = useState("");
  // <script id="__NEXT_DATA__"(|\s+[^>]*)>(.*?)<\/script\s*>
  // <a(|\\s+[^>]*)>(.*?)<\\/a\\s*>
  // "_id":"(.*?)"
  // <script id="__NEXT_DATA__"(|\\s+[^>]*)>(.*?)<\\/script\\s*>

  function onChange(event) {
    event.preventDefault();
    updateData({ ...data, [event.target.name]: event.target.value });
  }

  function submitForm(e) {
    e.preventDefault();

    data.text = e.target.text.value;
    data.description = e.target.description.value;

    var regEx = new RegExp(data.text, "gi");

    
      chrome.runtime.onMessage.addListener(function(request, sender) {
        if (request.action == "getSource") {

    
            this.pageSource = request.source;
          //  console.log(request.source)
            //var title = this.pageSource.match(/<h1[^>]*>([^<]+)<\/h1>/)[1];
            //var title = this.pageSource.match(regEx)[1]
            // var title = this.pageSource.match(/<title[^>]*>([^<]+)<\/title>/)[1];

            var heading = this.pageSource.match(/"_id":"(.*?)"/)[1];
            var title = this.pageSource.match(/<h1[^>]*>([^<]+)<\/h1>/)[1];
           


            //        var heading = this.pageSource.match(/<h1[^>]*>([^<]+)<\/h1>/)[1];
            //console.log(this.pageSource)


        //    console.log(this.pageSource.match(/"_id":"(.*?)"/)[1])
        //    console.log(this.pageSource.match(/<h1[^>]*>([^<]+)<\/h1>/)[1])
         //   console.log(this.pageSource.match(/<script id="__NEXT_DATA__"[^>]*>([^<]+)<\/script>/)[1])

         
           
          //  alert(heading)

          //  console.log(this.pageSource.match(regEx))

         //   setSiteHTML(this.pageSource);
          //  setDescription(this.pageSource);
            

        //  console.log(data.description.match(regEx))
         // console.log(data.description.match(regEx)[0])
    
          var smile = this.pageSource.match(regEx)[0];
          var smile2 = smile.replace( '"_id":"', '');
          var smile3 = smile2.replace( '"', '');
    
          var smile4 = "https://portal-admin.oera.no/admin/tool/com.enonic.app.contentstudio/main#/default/edit/" + smile3
    
          setEnonic(smile4);
    
          setHeading(heading);
        //  console.log(smile3)
        //  console.log(smile4)
    
          setHo(this.pageSource.match(regEx));;
          this.pageSource = "y"
        }
    });
  
    chrome.tabs.query({ active: true, currentWindow: true }, tabs => {
        chrome.tabs.executeScript(
            tabs[0].id,
            { code: 'var s = document.documentElement.outerHTML; chrome.runtime.sendMessage({action: "getSource", source: s});' }
        );
    });
  


   
  }

  /**
   * Get current URL
   */
  useEffect(() => {
    const queryInfo = { active: true, lastFocusedWindow: true };

    // Get HTML


    // Get tab info
    chrome.tabs &&
      chrome.tabs.query(queryInfo, (activeTab) => {
        console.log(activeTab);

        const siteUrl = activeTab[0].url;
        const siteLogo = activeTab[0].favIconUrl;
        const siteTitle = activeTab[0].title;


        const siteRedirectUrl = "http://127.0.0.1:1880/enonic?url=" + activeTab[0].url;
        setSiteRedirectUrl(siteRedirectUrl);

        setSiteTitle(siteTitle);
        setSiteUrl(siteUrl);
        setSiteLogo(siteLogo);
      });
  }, []);

  return (
    <div className="App">
      <header className="App-header">
        <img src={siteLogo} className="App-logo" alt="logo" />
        <div className="site-info">
          <p className="site-info-item">{siteTitle}</p>


{siteRedirectUrl &&
<div class="enonic">
<a href={siteRedirectUrl} target="_blank" rel="noreferrer">
   Ã…pne siden i CMS-systemet
  </a></div>
}



          {ho != "Error, RegEX not valid" &&
                ho.length >= 1 &&
                <div class="enonic">
              <a href={enonic} target="_blank" rel="noreferrer">
                  Open in Enonic
                </a></div>}

                {heading}

                {ho == "Error, RegEX not valid" &&
                ho.length > 0 &&
                <p class="enonic"><b>Could not find link to Enonic</b></p>}

        </div>
      </header>
    </div>
  );
}

/*


          {!ho.length &&
          <form className="w-full mt-3 max-w-2xl" onSubmit={submitForm}>
            <div className="mt-3 flex flex-wrap mb-1">
   
              <div className="w-full md:w-3/4">
          
                <input
                  className="appearance-none placeholder-gray-800 inline-block w-full py-3 px-4 mb-4 md:mb-0 text-gray-700 bg-gray-200 focus:bg-white border border-gray-200 focus:border-gray-500 rounded md:rounded-r-none"
                  type="text"
                  id="userinput"
                  onChange={(event) => {
                    setText(event.target.value);
                    onChange(event);
                  }}
                  name="text"
                  class="hideme"
                  required
                  aria-label="Insert text"
                  value={text}
                />
              </div>
              <div className="w-full md:w-3/4">
                <input
                  className="appearance-none placeholder-gray-800 inline-block w-full py-3 px-4 mb-4 md:mb-0 text-gray-700 bg-gray-200 focus:bg-white border border-gray-200 focus:border-gray-500 rounded md:rounded-r-none"
                  type="hidden"
                  onChange={(event) => {
                    setDescription(event.target.value);
                    onChange(event);
                  }}
                  value={description}
                  name="description"
                  id="userinput"
                  required
                  aria-label="Insert link text"
                />
              </div>
              <div className="w-full">
                <br />
                <button
                  name="submit"
                  type="submit"
                  className="font-medium mt-8 py-4 px-4 leading-none text-white rounded bg-gray-800 hover:bg-gray-900"
                >
                  <span>Get link to Enonic</span>
                </button>
              </div>
            </div>
          </form>
        }
        */

/*


           <label className="w-full pb-3" htmlFor="userinput">
                RegEX:
              </label>


                    /{" "}


                    {" "}
                /g


              */
// Get all url : (http|ftp|https):\/\/([\w_-]+(?:(?:\.[\w_-]+)+))([\w.,@?^=%&:\/~+#-]*[\w@?^=%&\/~+#-])
// <label className="w-full pb-3 pt-3" htmlFor="description">HTML:</label>
//          <p className="site-info-item">{siteUrl}</p>
//         <div className="site-info-html">{siteHTML}</div>

/*

          {ho && ho.length > 0 && <h2>Results</h2>}

          {ho && ho.length > 0 && <h3>Count: {ho.length}</h3>}

          {ho && ho.length > 0 && (
           
           
           <div className="site-info-html">
              {ho &&
                ho.length > 0 &&
                ho.map((person) => <p key={uuidv4()}>{person}</p>)}


              {ho != "Error, RegEX not valid" &&
                ho.length > 0 &&
              <a href={enonic} target="_blank" rel="noreferrer">
                  Open in Enonic
                </a>}
            </div>
          )}
          */

export default App;
